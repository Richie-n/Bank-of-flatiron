{"ast":null,"code":"var _jsxFileName = \"/home/richie/code-challenges/phase-2/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport dbData from \"./db.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [transactions, setTransactions] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  useEffect(() => {\n    // Load data from db.json (You need to fetch data from your server or mock API)\n    // For demonstration purposes, you can use a local import\n\n    setTransactions(dbData.transactions);\n  }, []);\n  useEffect(() => {\n    // Filter transactions based on the search query\n    const filteredTransactions = transactions.filter(transaction => transaction.description.toLowerCase().includes(searchQuery.toLowerCase()));\n    setSearchResults(filteredTransactions);\n  }, [searchQuery, transactions]);\n  function handleSearch(event) {\n    setSearchQuery(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui large fluid icon input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search your Recent Transactions\",\n        value: searchQuery,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"circular search link icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: searchResults.map(transaction => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", transaction.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", transaction.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Category: \", transaction.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Amount: \", transaction.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, transaction.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"Ew5OGNE9aOIaj7CBCp13OZ5CvHY=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","dbData","jsxDEV","_jsxDEV","Search","_s","searchQuery","setSearchQuery","transactions","setTransactions","searchResults","setSearchResults","filteredTransactions","filter","transaction","description","toLowerCase","includes","handleSearch","event","target","value","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","date","category","amount","id","_c","$RefreshReg$"],"sources":["/home/richie/code-challenges/phase-2/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/Search.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport dbData from \"./db.json\";\nfunction Search() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [transactions, setTransactions] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n\n  useEffect(() => {\n    // Load data from db.json (You need to fetch data from your server or mock API)\n    // For demonstration purposes, you can use a local import\n    \n    setTransactions(dbData.transactions);\n  }, []);\n\n  useEffect(() => {\n    // Filter transactions based on the search query\n    const filteredTransactions = transactions.filter(transaction =>\n      transaction.description.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n    setSearchResults(filteredTransactions);\n  }, [searchQuery, transactions]);\n\n  function handleSearch(event) {\n    setSearchQuery(event.target.value);\n  }\n\n  return (\n    <div>\n      <div className=\"ui large fluid icon input\">\n        <input\n          type=\"text\"\n          placeholder=\"Search your Recent Transactions\"\n          value={searchQuery}\n          onChange={handleSearch}\n        />\n        <i className=\"circular search link icon\"></i>\n      </div>\n      <div>\n        {searchResults.map(transaction => (\n          <div key={transaction.id}>\n            <p>Date: {transaction.date}</p>\n            <p>Description: {transaction.description}</p>\n            <p>Category: {transaction.category}</p>\n            <p>Amount: {transaction.amount}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd;IACA;;IAEAS,eAAe,CAACR,MAAM,CAACO,YAAY,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAENR,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,oBAAoB,GAAGJ,YAAY,CAACK,MAAM,CAACC,WAAW,IAC1DA,WAAW,CAACC,WAAW,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACX,WAAW,CAACU,WAAW,CAAC,CAAC,CAC1E,CAAC;IACDL,gBAAgB,CAACC,oBAAoB,CAAC;EACxC,CAAC,EAAE,CAACN,WAAW,EAAEE,YAAY,CAAC,CAAC;EAE/B,SAASU,YAAYA,CAACC,KAAK,EAAE;IAC3BZ,cAAc,CAACY,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC;EAEA,oBACElB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAKoB,SAAS,EAAC,2BAA2B;MAAAD,QAAA,gBACxCnB,OAAA;QACEqB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,iCAAiC;QAC7CJ,KAAK,EAAEf,WAAY;QACnBoB,QAAQ,EAAER;MAAa;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACF3B,OAAA;QAAGoB,SAAS,EAAC;MAA2B;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACN3B,OAAA;MAAAmB,QAAA,EACGZ,aAAa,CAACqB,GAAG,CAACjB,WAAW,iBAC5BX,OAAA;QAAAmB,QAAA,gBACEnB,OAAA;UAAAmB,QAAA,GAAG,QAAM,EAACR,WAAW,CAACkB,IAAI;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/B3B,OAAA;UAAAmB,QAAA,GAAG,eAAa,EAACR,WAAW,CAACC,WAAW;QAAA;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7C3B,OAAA;UAAAmB,QAAA,GAAG,YAAU,EAACR,WAAW,CAACmB,QAAQ;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvC3B,OAAA;UAAAmB,QAAA,GAAG,UAAQ,EAACR,WAAW,CAACoB,MAAM;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJ3BhB,WAAW,CAACqB,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKnB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzB,EAAA,CA/CQD,MAAM;AAAAgC,EAAA,GAANhC,MAAM;AAiDf,eAAeA,MAAM;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}