{"ast":null,"code":"var _jsxFileName = \"/home/richie/code-challenges/phase-2/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/AccountContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountContainer() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:8001/transactions\").then(response => response.json()).then(data => setTransactions(data));\n  }, []);\n  function updatedTransactionEvents(addedTransactions) {\n    const updatedTransactions = [...transactions, addedTransactions];\n    setTransactions(updatedTransactions);\n  }\n  function handleSearch(searchQuery) {\n    setSearchQuery(searchQuery);\n  }\n\n  // Filter transactions based on search query\n  const filteredTransactions = transactions.filter(transaction => transaction.description.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      searchEvent: searchQuery,\n      setSearchEvent: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      addedData: updatedTransactionEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsList, {\n      transactions: filteredTransactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(AccountContainer, \"7grw9ld2xc+CTsD4CxE3LwrKUCY=\");\n_c = AccountContainer;\nexport default AccountContainer;\nvar _c;\n$RefreshReg$(_c, \"AccountContainer\");","map":{"version":3,"names":["React","useState","useEffect","TransactionsList","Search","AddTransactionForm","jsxDEV","_jsxDEV","AccountContainer","_s","transactions","setTransactions","searchQuery","setSearchQuery","fetch","then","response","json","data","updatedTransactionEvents","addedTransactions","updatedTransactions","handleSearch","filteredTransactions","filter","transaction","description","toLowerCase","includes","children","searchEvent","setSearchEvent","fileName","_jsxFileName","lineNumber","columnNumber","addedData","_c","$RefreshReg$"],"sources":["/home/richie/code-challenges/phase-2/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/AccountContainer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  const [transactions, setTransactions] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"http://localhost:8001/transactions\")\n      .then(response => response.json())\n      .then(data => setTransactions(data));\n  }, []);\n\n  function updatedTransactionEvents(addedTransactions) {\n    const updatedTransactions = [...transactions, addedTransactions];\n    setTransactions(updatedTransactions);\n  }\n\n  function handleSearch(searchQuery) {\n    setSearchQuery(searchQuery);\n  }\n\n  // Filter transactions based on search query\n  const filteredTransactions = transactions.filter(transaction =>\n    transaction.description.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  return (\n    <div>\n      <Search searchEvent={searchQuery} setSearchEvent={handleSearch} />\n      <AddTransactionForm addedData={updatedTransactionEvents} />\n      <TransactionsList transactions={filteredTransactions} />\n    </div>\n  );\n}\n\nexport default AccountContainer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,eAAe,CAACO,IAAI,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,wBAAwBA,CAACC,iBAAiB,EAAE;IACnD,MAAMC,mBAAmB,GAAG,CAAC,GAAGX,YAAY,EAAEU,iBAAiB,CAAC;IAChET,eAAe,CAACU,mBAAmB,CAAC;EACtC;EAEA,SAASC,YAAYA,CAACV,WAAW,EAAE;IACjCC,cAAc,CAACD,WAAW,CAAC;EAC7B;;EAEA;EACA,MAAMW,oBAAoB,GAAGb,YAAY,CAACc,MAAM,CAACC,WAAW,IAC1DA,WAAW,CAACC,WAAW,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAChB,WAAW,CAACe,WAAW,CAAC,CAAC,CAC1E,CAAC;EAED,oBACEpB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA,CAACH,MAAM;MAAC0B,WAAW,EAAElB,WAAY;MAACmB,cAAc,EAAET;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClE5B,OAAA,CAACF,kBAAkB;MAAC+B,SAAS,EAAEjB;IAAyB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3D5B,OAAA,CAACJ,gBAAgB;MAACO,YAAY,EAAEa;IAAqB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV;AAAC1B,EAAA,CA/BQD,gBAAgB;AAAA6B,EAAA,GAAhB7B,gBAAgB;AAiCzB,eAAeA,gBAAgB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}