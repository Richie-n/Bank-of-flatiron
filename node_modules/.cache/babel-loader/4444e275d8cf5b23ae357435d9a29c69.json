{"ast":null,"code":"var _jsxFileName = \"/home/richie/code-challenges/phase-2/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/AddTransactionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTransactionForm() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  function handleSubmit(event) {\n    event.preventDefault();\n    const formData = {\n      date: event.target.date.value,\n      description: event.target.description.value,\n      category: event.target.category.value,\n      amount: parseFloat(event.target.amount.value) // Convert amount to float\n    };\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => {\n      // Add the new transaction to the transactions state\n      setTransactions([...transactions, data]);\n      // Clear the form fields after successful submission\n      event.target.reset();\n    }).catch(error => console.error(\"Error:\", error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTransactionForm, \"Tz1qIkShCHvLh/M7ZupqdoMUajU=\");\n_c = AddTransactionForm;\nexport default AddTransactionForm;\nvar _c;\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddTransactionForm","_s","transactions","setTransactions","handleSubmit","event","preventDefault","formData","date","target","value","description","category","amount","parseFloat","fetch","method","headers","body","JSON","stringify","then","response","json","data","reset","catch","error","console","className","children","onSubmit","type","name","required","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","step","_c","$RefreshReg$"],"sources":["/home/richie/code-challenges/phase-2/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/AddTransactionForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction AddTransactionForm() {\n  const [transactions, setTransactions] = useState([]);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    const formData = {\n      date: event.target.date.value,\n      description: event.target.description.value,\n      category: event.target.category.value,\n      amount: parseFloat(event.target.amount.value), // Convert amount to float\n    };\n\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // Add the new transaction to the transactions state\n        setTransactions([...transactions, data]);\n        // Clear the form fields after successful submission\n        event.target.reset();\n      })\n      .catch((error) => console.error(\"Error:\", error));\n  }\n\n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\" onSubmit={handleSubmit}>\n        <div className=\"inline fields\">\n          <input type=\"date\" name=\"date\" required />\n          <input type=\"text\" name=\"description\" placeholder=\"Description\" required />\n          <input type=\"text\" name=\"category\" placeholder=\"Category\" required />\n          <input type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" required />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}