{"version":3,"sources":["components/Transaction.js","components/TransactionsList.js","components/Search.js","components/AddTransactionForm.js","components/AccountContainer.js","components/App.js","index.js"],"names":["Transaction","_ref","date","description","category","amount","_jsxs","children","_jsx","TransactionsList","transactionsEvent","setTransactionsEvent","searchEvent","sortMethod","useState","transactionEventList","filter","transaction","toLowerCase","includes","map","id","sortTransactions","event","sortBy","target","textContent","item","copyOftransactionsEvent","sort","a","b","className","onClick","Search","setSearchEvent","type","placeholder","onChange","value","AddTransactionForm","addedData","formInput","setFormInput","handleChange","e","key","name","console","log","onSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","step","AccountContainer","useEffect","addedTransactions","updatedTransactionEventsArray","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.769ca004.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Transaction({date, description,category,amount}) {\n  return (\n    <tr>\n      <td>{date}</td>\n      <td>{description}</td>\n      <td>{category}</td>\n      <td>{amount}</td>\n    </tr>\n  );\n}\n\nexport default Transaction;","import React, {useState} from \"react\";\nimport Transaction from \"./Transaction\";\n\nfunction TransactionsList({transactionsEvent, setTransactionsEvent, searchEvent}) {\n\n\nconst [sortMethod] = useState({\n  category: -1,\n  description: -1,\n})\nlet transactionEventList;\n\nif (transactionsEvent) {\nconst filteredTransactions = transactionsEvent.filter(transaction => {\n  return (transaction.description.toLowerCase().includes(searchEvent.toLowerCase()) || transaction.category.toLowerCase().includes(searchEvent.toLowerCase()))\n  })\n\ntransactionEventList = filteredTransactions.map((transaction) => (\n  <Transaction \n  key={transaction.id}\n  id={transaction.id}\n  date={transaction.date}\n  description={transaction.description}\n  category={transaction.category}\n  amount={transaction.amount}\n  />\n));\n}\n//sort strategy\nfunction updateSortMethod(item){\n  sortMethod[item] = sortMethod[item] * -1;\n}\n\n\nfunction sortTransactions(event){\n\n  const sortBy = event.target.textContent.toLowerCase();\n  updateSortMethod(sortBy);\n\n\n  let copyOftransactionsEvent;\n\n  if (sortBy === 'description' || sortBy === 'category') {\n    copyOftransactionsEvent = [...transactionsEvent].sort((a,b)=>{\n      if (a[sortBy].toLowerCase() > b[sortBy].toLowerCase()){\n              return sortMethod[sortBy] \n            }else if\n              (a[sortBy].toLowerCase() < b[sortBy].toLowerCase()){\n                return sortMethod[sortBy]                                       \n            }else{\n              return 0\n            }\n    })\n\n}\nsetTransactionsEvent(copyOftransactionsEvent)\n}\n  return (\n    <table className=\"ui celled striped padded table\">\n      <tbody>\n        <tr>\n          <th>\n            <h3 className=\"ui center aligned header\">Date</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\" onClick={sortTransactions}>Description</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\"onClick={sortTransactions}>Category</h3>\n          </th>\n          <th> \n            <h3 className=\"ui center aligned header\">Amount</h3>\n          </th>\n        </tr>\n        {transactionEventList}\n      </tbody>\n    </table>\n  );\n}\n\nexport default TransactionsList;","import React from \"react\";\n\nfunction Search({searchEvent, setSearchEvent}) {\nfunction handleSearch(event) {\n  setSearchEvent(event.target.value);\n}\n\n\n\n  return (\n    <div className=\"ui large fluid icon input\">\n      <input\n        type=\"text\"\n        placeholder=\"Search your Recent Transactions\"\n        onChange={handleSearch}\n        value={searchEvent}\n      />\n      <i className=\"circular search link icon\"></i>\n    </div>\n  );\n}\n\nexport default Search;","import React, {useState} from \"react\";\n\nfunction AddTransactionForm({addedData}) {\nconst [formInput, setFormInput] = useState({\n  date:\"\",\n  description:\"\",\n  category:\"\",\n  amount:\"\",\n});\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n  fetch(\"https://bank-of-flatiron-m53s.onrender.com/transactions\",{\n\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  body: JSON.stringify(formInput),\n})\n  .then(response => response.json())\n  .then(data => addedData(data))\n  }\n\n  function handleChange(e){\n    const key = e.target.name\n    const value = e.target.value;\n    setFormInput({...formInput,[key]: value})\n    console.log(formInput)\n  }\n\n\n  return (\n    <div className=\"ui segment\">\n      <form onSubmit = {handleSubmit}className=\"ui form\">\n        <div className=\"inline fields\">\n          <input onChange={handleChange} type=\"date\" name=\"date\" />\n          <input  onChange={handleChange} type=\"text\" name=\"description\" placeholder=\"Description\" />\n          <input  onChange={handleChange} type=\"text\" name=\"category\" placeholder=\"Category\" />\n          <input  onChange={handleChange} type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;","\nimport React, { useState, useEffect} from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n \nconst [transactionsEvent, setTransactionsEvent] = useState([])\nconst [searchEvent, setSearchEvent] = useState(\"\")\n\nuseEffect(() => {fetch(\"https://bank-of-flatiron-m53s.onrender.com/transactions\").then(response => response.json()).then((data) => setTransactionsEvent(data));\n}, [])\n\n\nfunction updatedTransactionEvents(addedTransactions) {\n  const updatedTransactionEventsArray=[...transactionsEvent,addedTransactions];\n  setTransactionsEvent(updatedTransactionEventsArray);\n}\n\n  return (\n    <div>\n      <Search  searchEvent={searchEvent} setSearchEvent={setSearchEvent }/>\n      <AddTransactionForm addedData ={updatedTransactionEvents} />\n      <TransactionsList transactionsEvent={transactionsEvent} setTransactionsEvent = {setTransactionsEvent}  searchEvent ={searchEvent}/>\n    </div>\n  );\n}\n\nexport default AccountContainer;\n","import React from \"react\";\nimport AccountContainer from \"./AccountContainer\";\n\nfunction App() {\n  return (\n    <div className=\"ui raised segment\">\n      <div className=\"ui segment violet inverted\">\n        <h2>The Royal Bank of Flatiron</h2>\n      </div>\n      <AccountContainer />\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}